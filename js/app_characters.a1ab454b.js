(self["webpackChunkjdrave_app"]=self["webpackChunkjdrave_app"]||[]).push([[950],{1191:function(e,a,n){"use strict";n.r(a),n.d(a,{default:function(){return h}});var i=n(6252);const t=(0,i._)("header",{class:"flex justify-between align-middle mb-8"},[(0,i._)("h1",{class:"page-title"},[(0,i.Uk)("CrÃ©ation de "),(0,i._)("span",null,"personnage")])],-1),r=(0,i.Uk)("Valider");function d(e,a,n,d,l,m){const u=(0,i.up)("BaseInput"),o=(0,i.up)("BaseTextarea"),c=(0,i.up)("BaseButton");return(0,i.wg)(),(0,i.iD)(i.HY,null,[t,(0,i._)("div",null,[(0,i.Wm)(u,{label:"Nom",modelValue:e.newCharacter.name,"onUpdate:modelValue":a[0]||(a[0]=a=>e.newCharacter.name=a)},null,8,["modelValue"]),(0,i.Wm)(u,{label:"PV max",type:"number",min:"0",modelValue:e.newCharacter.maxHp,"onUpdate:modelValue":a[1]||(a[1]=a=>e.newCharacter.maxHp=a)},null,8,["modelValue"]),(0,i.Wm)(u,{label:"PV max",type:"number",min:"0",modelValue:e.newCharacter.maxMp,"onUpdate:modelValue":a[2]||(a[2]=a=>e.newCharacter.maxMp=a)},null,8,["modelValue"]),(0,i.Wm)(o,{class:"col-span-full",label:"Features",modelValue:e.newCharacter.features,"onUpdate:modelValue":a[3]||(a[3]=a=>e.newCharacter.features=a)},null,8,["modelValue"]),(0,i.Wm)(c,{class:"primary",onClick:e.createCharacter},{default:(0,i.w5)((()=>[r])),_:1},8,["onClick"])])],64)}var l=n(2262),m=n(7102),u=n(2119),o=n(7982),c=n.n(o),s=n(4988),k=n.n(s),v=(0,i.aZ)({name:"CharacterCreation",props:{gameId:{type:String,required:!0}},setup(e){const a=(0,l.qj)({name:"",features:"{}",maxHp:0,maxMp:0}),{mutate:n,onDone:i}=(0,m.Db)(c(),(()=>({variables:{gameId:e.gameId,...a},update:(a,{data:{createCharacter:n}})=>{const i=a.readQuery({query:k(),variables:{gameId:e.gameId}});console.log(n),console.log(i),i.characters.push(n),a.writeQuery({query:k(),data:i})}}))),t=(0,u.tv)();return i((({data:e})=>{t.replace({name:"character",params:{characterId:e.character.id}})})),{newCharacter:a,createCharacter:n}}}),f=n(8118);const p=(0,f.Z)(v,[["render",d]]);var h=p},4988:function(e){var a={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"CharactersFromGame"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"gameId"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"uuid"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"characters"},arguments:[{kind:"Argument",name:{kind:"Name",value:"where"},value:{kind:"ObjectValue",fields:[{kind:"ObjectField",name:{kind:"Name",value:"game_id"},value:{kind:"ObjectValue",fields:[{kind:"ObjectField",name:{kind:"Name",value:"_eq"},value:{kind:"Variable",name:{kind:"Name",value:"gameId"}}}]}}]}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"features"},arguments:[],directives:[]},{kind:"Field",alias:{kind:"Name",value:"maxHp"},name:{kind:"Name",value:"max_hp"},arguments:[],directives:[]},{kind:"Field",alias:{kind:"Name",value:"currentHp"},name:{kind:"Name",value:"current_hp"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"picture"},arguments:[],directives:[]}]}},{kind:"Field",alias:{kind:"Name",value:"game"},name:{kind:"Name",value:"games_by_pk"},arguments:[{kind:"Argument",name:{kind:"Name",value:"id"},value:{kind:"Variable",name:{kind:"Name",value:"gameId"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"title"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:232}};a.loc.source={body:"query CharactersFromGame($gameId: uuid!) {\n  characters(where: {game_id: {_eq: $gameId}}) {\n    id\n    name\n    features\n    maxHp: max_hp\n    currentHp: current_hp\n    picture\n  }\n  game: games_by_pk(id: $gameId) {\n    title\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};function n(e,a){if("FragmentSpread"===e.kind)a.add(e.name.value);else if("VariableDefinition"===e.kind){var i=e.type;"NamedType"===i.kind&&a.add(i.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){n(e,a)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){n(e,a)})),e.definitions&&e.definitions.forEach((function(e){n(e,a)}))}var i={};function t(e,a){for(var n=0;n<e.definitions.length;n++){var i=e.definitions[n];if(i.name&&i.name.value==a)return i}}function r(e,a){var n={kind:e.kind,definitions:[t(e,a)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);var r=i[a]||new Set,d=new Set,l=new Set;r.forEach((function(e){l.add(e)}));while(l.size>0){var m=l;l=new Set,m.forEach((function(e){if(!d.has(e)){d.add(e);var a=i[e]||new Set;a.forEach((function(e){l.add(e)}))}}))}return d.forEach((function(a){var i=t(e,a);i&&n.definitions.push(i)})),n}(function(){a.definitions.forEach((function(e){if(e.name){var a=new Set;n(e,a),i[e.name.value]=a}}))})(),e.exports=a,e.exports.CharactersFromGame=r(a,"CharactersFromGame")},7982:function(e){var a={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"InsertCharacter"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"gameId"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"uuid"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"name"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"features"}},type:{kind:"NamedType",name:{kind:"Name",value:"jsonb"}},defaultValue:{kind:"ObjectValue",fields:[]},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"maxHp"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"maxMp"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"character"},name:{kind:"Name",value:"insert_characters_one"},arguments:[{kind:"Argument",name:{kind:"Name",value:"object"},value:{kind:"ObjectValue",fields:[{kind:"ObjectField",name:{kind:"Name",value:"game_id"},value:{kind:"Variable",name:{kind:"Name",value:"gameId"}}},{kind:"ObjectField",name:{kind:"Name",value:"name"},value:{kind:"Variable",name:{kind:"Name",value:"name"}}},{kind:"ObjectField",name:{kind:"Name",value:"features"},value:{kind:"Variable",name:{kind:"Name",value:"features"}}},{kind:"ObjectField",name:{kind:"Name",value:"max_hp"},value:{kind:"Variable",name:{kind:"Name",value:"maxHp"}}},{kind:"ObjectField",name:{kind:"Name",value:"max_mp"},value:{kind:"Variable",name:{kind:"Name",value:"maxMp"}}}]}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:277}};a.loc.source={body:"mutation InsertCharacter($gameId: uuid!, $name: String!, $features: jsonb = {}, $maxHp: Int!, $maxMp: Int!) {\n  character: insert_characters_one(object: {\n    game_id: $gameId,\n    name: $name,\n    features: $features,\n    max_hp: $maxHp,\n    max_mp: $maxMp\n  }) {\n    id\n  }\n}",name:"GraphQL request",locationOffset:{line:1,column:1}};function n(e,a){if("FragmentSpread"===e.kind)a.add(e.name.value);else if("VariableDefinition"===e.kind){var i=e.type;"NamedType"===i.kind&&a.add(i.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){n(e,a)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){n(e,a)})),e.definitions&&e.definitions.forEach((function(e){n(e,a)}))}var i={};function t(e,a){for(var n=0;n<e.definitions.length;n++){var i=e.definitions[n];if(i.name&&i.name.value==a)return i}}function r(e,a){var n={kind:e.kind,definitions:[t(e,a)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);var r=i[a]||new Set,d=new Set,l=new Set;r.forEach((function(e){l.add(e)}));while(l.size>0){var m=l;l=new Set,m.forEach((function(e){if(!d.has(e)){d.add(e);var a=i[e]||new Set;a.forEach((function(e){l.add(e)}))}}))}return d.forEach((function(a){var i=t(e,a);i&&n.definitions.push(i)})),n}(function(){a.definitions.forEach((function(e){if(e.name){var a=new Set;n(e,a),i[e.name.value]=a}}))})(),e.exports=a,e.exports.InsertCharacter=r(a,"InsertCharacter")}}]);
//# sourceMappingURL=app_characters.a1ab454b.js.map