{"version":3,"file":"js/app_profile-legacy.a670574e.js","mappings":"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","sources":["webpack://jdrave-app/./src/views/ProfileView.vue?d861","webpack://jdrave-app/./src/views/ProfileView.vue","webpack://jdrave-app/./src/services/users/UpdateUser.mutation.gql"],"sourcesContent":["import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, unref as _unref, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, Fragment as _Fragment } from \"vue\"\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", { class: \"page-title mb-8\" }, [\n  /*#__PURE__*/_createTextVNode(\"Ã‰diter le \"),\n  /*#__PURE__*/_createElementVNode(\"span\", null, \"profil\")\n], -1)\nconst _hoisted_2 = { class: \"max-w-lg mx-auto\" }\nconst _hoisted_3 = { key: 0 }\nconst _hoisted_4 = {\n  key: 1,\n  class: \"mb-6\"\n}\nconst _hoisted_5 = /*#__PURE__*/_createTextVNode(\" Enregistrer \")\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"div\", null, \" stats? \", -1)\n\nimport { useMutation, useQuery } from '@vue/apollo-composable';\nimport GetCurrentUser from '@/services/users/GetCurrentUser.query.gql';\nimport UpdateUser from '@/services/users/UpdateUser.mutation.gql';\nimport IUserQuery from '@/types/services/UserQuery.interface';\nimport { ref, watchEffect } from 'vue';\nimport IUser from '@/types/User.interface';\n\n\nexport default /*#__PURE__*/_defineComponent({\n  setup(__props) {\n\nconst { result, loading, refetch } = useQuery<IUserQuery>(GetCurrentUser);\n\nlet user = ref<IUser | null>(null);\n\nwatchEffect(() => {\n  if (result.value) {\n    user.value = { ...result.value?.current_user[0] };\n  }\n});\n\nconst {\n  mutate: updateUser,\n  loading: isUpdating,\n  onDone: updateCache,\n} = useMutation(UpdateUser, () => ({\n  variables: {\n    id: user.value?.id,\n    username: user.value?.username,\n  },\n}));\n\nupdateCache(() => {\n  refetch();\n});\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_BaseInput = _resolveComponent(\"BaseInput\")!\n  const _component_BaseButton = _resolveComponent(\"BaseButton\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _hoisted_1,\n    _createElementVNode(\"div\", _hoisted_2, [\n      (_unref(loading))\n        ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, \"Chargement\"))\n        : _createCommentVNode(\"\", true),\n      (!_unref(loading) && _unref(user))\n        ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [\n            _createVNode(_component_BaseInput, {\n              modelValue: _unref(user).username,\n              \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((_unref(user).username) = $event)),\n              label: \"Pseudo\"\n            }, null, 8, [\"modelValue\"]),\n            _createVNode(_component_BaseInput, {\n              modelValue: _unref(user).email,\n              \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((_unref(user).email) = $event)),\n              label: \"Adresse mail\",\n              readonly: \"\"\n            }, null, 8, [\"modelValue\"]),\n            _createVNode(_component_BaseButton, {\n              class: \"primary\",\n              \"is-loading\": _unref(isUpdating),\n              onClick: _unref(updateUser)\n            }, {\n              default: _withCtx(() => [\n                _hoisted_5\n              ]),\n              _: 1\n            }, 8, [\"is-loading\", \"onClick\"])\n          ]))\n        : _createCommentVNode(\"\", true),\n      _hoisted_6\n    ])\n  ], 64))\n}\n}\n\n})","import script from \"./ProfileView.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./ProfileView.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"mutation\",\"name\":{\"kind\":\"Name\",\"value\":\"UpdateUser\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"username\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"update_users_by_pk\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"pk_columns\"},\"value\":{\"kind\":\"ObjectValue\",\"fields\":[{\"kind\":\"ObjectField\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}}}]}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"_set\"},\"value\":{\"kind\":\"ObjectValue\",\"fields\":[{\"kind\":\"ObjectField\",\"name\":{\"kind\":\"Name\",\"value\":\"username\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"username\"}}}]}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"username\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"email\"},\"arguments\":[],\"directives\":[]}]}}]}}],\"loc\":{\"start\":0,\"end\":170}};\n    doc.loc.source = {\"body\":\"mutation UpdateUser($id: String!, $username: String!) {\\n  update_users_by_pk(pk_columns: { id: $id }, _set: { username: $username }) {\\n    id\\n    username\\n    email\\n  }\\n}\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set();\n\n      // IE 11 doesn't support \"new Set(iterable)\", so we add the members of opRefs to newRefs one by one\n      opRefs.forEach(function(refName) {\n        newRefs.add(refName);\n      });\n\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n    \n    module.exports = doc;\n    \n        module.exports[\"UpdateUser\"] = oneQuery(doc, \"UpdateUser\");\n        \n"],"names":["_hoisted_1","_","class","_hoisted_2","_hoisted_3","key","_hoisted_4","_hoisted_5","_hoisted_6","setup","__props","result","loading","refetch","user","value","current_user","variables","id","username","updateUser","mutate","isUpdating","updateCache","onDone","_ctx","_cache","_component_BaseInput","_component_BaseButton","modelValue","$event","label","email","readonly","onClick","default","__exports__","doc","loc","source","collectFragmentReferences","node","refs","kind","add","name","type","selectionSet","selections","forEach","selection","variableDefinitions","def","definitions","definitionRefs","findOperation","i","length","element","oneQuery","operationName","newDoc","hasOwnProperty","opRefs","Set","allRefs","newRefs","refName","size","prevRefs","has","childRefs","childRef","op","push","module","exports"],"sourceRoot":""}